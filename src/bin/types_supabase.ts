/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/channels": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.channels.id"];
          created_at?: parameters["rowFilter.channels.created_at"];
          name?: parameters["rowFilter.channels.name"];
          app_id?: parameters["rowFilter.channels.app_id"];
          version?: parameters["rowFilter.channels.version"];
          created_by?: parameters["rowFilter.channels.created_by"];
          updated_at?: parameters["rowFilter.channels.updated_at"];
          public?: parameters["rowFilter.channels.public"];
          disableAutoUpdateUnderNative?: parameters["rowFilter.channels.disableAutoUpdateUnderNative"];
          disableAutoUpdateToMajor?: parameters["rowFilter.channels.disableAutoUpdateToMajor"];
          beta?: parameters["rowFilter.channels.beta"];
          ios?: parameters["rowFilter.channels.ios"];
          android?: parameters["rowFilter.channels.android"];
          allow_device_self_set?: parameters["rowFilter.channels.allow_device_self_set"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["channels"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** channels */
          channels?: definitions["channels"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.channels.id"];
          created_at?: parameters["rowFilter.channels.created_at"];
          name?: parameters["rowFilter.channels.name"];
          app_id?: parameters["rowFilter.channels.app_id"];
          version?: parameters["rowFilter.channels.version"];
          created_by?: parameters["rowFilter.channels.created_by"];
          updated_at?: parameters["rowFilter.channels.updated_at"];
          public?: parameters["rowFilter.channels.public"];
          disableAutoUpdateUnderNative?: parameters["rowFilter.channels.disableAutoUpdateUnderNative"];
          disableAutoUpdateToMajor?: parameters["rowFilter.channels.disableAutoUpdateToMajor"];
          beta?: parameters["rowFilter.channels.beta"];
          ios?: parameters["rowFilter.channels.ios"];
          android?: parameters["rowFilter.channels.android"];
          allow_device_self_set?: parameters["rowFilter.channels.allow_device_self_set"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.channels.id"];
          created_at?: parameters["rowFilter.channels.created_at"];
          name?: parameters["rowFilter.channels.name"];
          app_id?: parameters["rowFilter.channels.app_id"];
          version?: parameters["rowFilter.channels.version"];
          created_by?: parameters["rowFilter.channels.created_by"];
          updated_at?: parameters["rowFilter.channels.updated_at"];
          public?: parameters["rowFilter.channels.public"];
          disableAutoUpdateUnderNative?: parameters["rowFilter.channels.disableAutoUpdateUnderNative"];
          disableAutoUpdateToMajor?: parameters["rowFilter.channels.disableAutoUpdateToMajor"];
          beta?: parameters["rowFilter.channels.beta"];
          ios?: parameters["rowFilter.channels.ios"];
          android?: parameters["rowFilter.channels.android"];
          allow_device_self_set?: parameters["rowFilter.channels.allow_device_self_set"];
        };
        body: {
          /** channels */
          channels?: definitions["channels"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/deleted_account": {
    get: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.deleted_account.created_at"];
          email?: parameters["rowFilter.deleted_account.email"];
          id?: parameters["rowFilter.deleted_account.id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["deleted_account"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** deleted_account */
          deleted_account?: definitions["deleted_account"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.deleted_account.created_at"];
          email?: parameters["rowFilter.deleted_account.email"];
          id?: parameters["rowFilter.deleted_account.id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.deleted_account.created_at"];
          email?: parameters["rowFilter.deleted_account.email"];
          id?: parameters["rowFilter.deleted_account.id"];
        };
        body: {
          /** deleted_account */
          deleted_account?: definitions["deleted_account"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/global_stats": {
    get: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.global_stats.created_at"];
          date_id?: parameters["rowFilter.global_stats.date_id"];
          apps?: parameters["rowFilter.global_stats.apps"];
          updates?: parameters["rowFilter.global_stats.updates"];
          stars?: parameters["rowFilter.global_stats.stars"];
          users?: parameters["rowFilter.global_stats.users"];
          paying?: parameters["rowFilter.global_stats.paying"];
          trial?: parameters["rowFilter.global_stats.trial"];
          need_upgrade?: parameters["rowFilter.global_stats.need_upgrade"];
          not_paying?: parameters["rowFilter.global_stats.not_paying"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["global_stats"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** global_stats */
          global_stats?: definitions["global_stats"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.global_stats.created_at"];
          date_id?: parameters["rowFilter.global_stats.date_id"];
          apps?: parameters["rowFilter.global_stats.apps"];
          updates?: parameters["rowFilter.global_stats.updates"];
          stars?: parameters["rowFilter.global_stats.stars"];
          users?: parameters["rowFilter.global_stats.users"];
          paying?: parameters["rowFilter.global_stats.paying"];
          trial?: parameters["rowFilter.global_stats.trial"];
          need_upgrade?: parameters["rowFilter.global_stats.need_upgrade"];
          not_paying?: parameters["rowFilter.global_stats.not_paying"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.global_stats.created_at"];
          date_id?: parameters["rowFilter.global_stats.date_id"];
          apps?: parameters["rowFilter.global_stats.apps"];
          updates?: parameters["rowFilter.global_stats.updates"];
          stars?: parameters["rowFilter.global_stats.stars"];
          users?: parameters["rowFilter.global_stats.users"];
          paying?: parameters["rowFilter.global_stats.paying"];
          trial?: parameters["rowFilter.global_stats.trial"];
          need_upgrade?: parameters["rowFilter.global_stats.need_upgrade"];
          not_paying?: parameters["rowFilter.global_stats.not_paying"];
        };
        body: {
          /** global_stats */
          global_stats?: definitions["global_stats"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/plans": {
    get: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.plans.created_at"];
          updated_at?: parameters["rowFilter.plans.updated_at"];
          name?: parameters["rowFilter.plans.name"];
          description?: parameters["rowFilter.plans.description"];
          price_m?: parameters["rowFilter.plans.price_m"];
          price_y?: parameters["rowFilter.plans.price_y"];
          stripe_id?: parameters["rowFilter.plans.stripe_id"];
          app?: parameters["rowFilter.plans.app"];
          channel?: parameters["rowFilter.plans.channel"];
          update?: parameters["rowFilter.plans.update"];
          version?: parameters["rowFilter.plans.version"];
          shared?: parameters["rowFilter.plans.shared"];
          abtest?: parameters["rowFilter.plans.abtest"];
          progressive_deploy?: parameters["rowFilter.plans.progressive_deploy"];
          id?: parameters["rowFilter.plans.id"];
          price_m_id?: parameters["rowFilter.plans.price_m_id"];
          price_y_id?: parameters["rowFilter.plans.price_y_id"];
          storage?: parameters["rowFilter.plans.storage"];
          bandwidth?: parameters["rowFilter.plans.bandwidth"];
          mau?: parameters["rowFilter.plans.mau"];
          market_desc?: parameters["rowFilter.plans.market_desc"];
          storage_unit?: parameters["rowFilter.plans.storage_unit"];
          bandwidth_unit?: parameters["rowFilter.plans.bandwidth_unit"];
          mau_unit?: parameters["rowFilter.plans.mau_unit"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["plans"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** plans */
          plans?: definitions["plans"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.plans.created_at"];
          updated_at?: parameters["rowFilter.plans.updated_at"];
          name?: parameters["rowFilter.plans.name"];
          description?: parameters["rowFilter.plans.description"];
          price_m?: parameters["rowFilter.plans.price_m"];
          price_y?: parameters["rowFilter.plans.price_y"];
          stripe_id?: parameters["rowFilter.plans.stripe_id"];
          app?: parameters["rowFilter.plans.app"];
          channel?: parameters["rowFilter.plans.channel"];
          update?: parameters["rowFilter.plans.update"];
          version?: parameters["rowFilter.plans.version"];
          shared?: parameters["rowFilter.plans.shared"];
          abtest?: parameters["rowFilter.plans.abtest"];
          progressive_deploy?: parameters["rowFilter.plans.progressive_deploy"];
          id?: parameters["rowFilter.plans.id"];
          price_m_id?: parameters["rowFilter.plans.price_m_id"];
          price_y_id?: parameters["rowFilter.plans.price_y_id"];
          storage?: parameters["rowFilter.plans.storage"];
          bandwidth?: parameters["rowFilter.plans.bandwidth"];
          mau?: parameters["rowFilter.plans.mau"];
          market_desc?: parameters["rowFilter.plans.market_desc"];
          storage_unit?: parameters["rowFilter.plans.storage_unit"];
          bandwidth_unit?: parameters["rowFilter.plans.bandwidth_unit"];
          mau_unit?: parameters["rowFilter.plans.mau_unit"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.plans.created_at"];
          updated_at?: parameters["rowFilter.plans.updated_at"];
          name?: parameters["rowFilter.plans.name"];
          description?: parameters["rowFilter.plans.description"];
          price_m?: parameters["rowFilter.plans.price_m"];
          price_y?: parameters["rowFilter.plans.price_y"];
          stripe_id?: parameters["rowFilter.plans.stripe_id"];
          app?: parameters["rowFilter.plans.app"];
          channel?: parameters["rowFilter.plans.channel"];
          update?: parameters["rowFilter.plans.update"];
          version?: parameters["rowFilter.plans.version"];
          shared?: parameters["rowFilter.plans.shared"];
          abtest?: parameters["rowFilter.plans.abtest"];
          progressive_deploy?: parameters["rowFilter.plans.progressive_deploy"];
          id?: parameters["rowFilter.plans.id"];
          price_m_id?: parameters["rowFilter.plans.price_m_id"];
          price_y_id?: parameters["rowFilter.plans.price_y_id"];
          storage?: parameters["rowFilter.plans.storage"];
          bandwidth?: parameters["rowFilter.plans.bandwidth"];
          mau?: parameters["rowFilter.plans.mau"];
          market_desc?: parameters["rowFilter.plans.market_desc"];
          storage_unit?: parameters["rowFilter.plans.storage_unit"];
          bandwidth_unit?: parameters["rowFilter.plans.bandwidth_unit"];
          mau_unit?: parameters["rowFilter.plans.mau_unit"];
        };
        body: {
          /** plans */
          plans?: definitions["plans"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/stripe_info": {
    get: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.stripe_info.created_at"];
          updated_at?: parameters["rowFilter.stripe_info.updated_at"];
          subscription_id?: parameters["rowFilter.stripe_info.subscription_id"];
          customer_id?: parameters["rowFilter.stripe_info.customer_id"];
          status?: parameters["rowFilter.stripe_info.status"];
          product_id?: parameters["rowFilter.stripe_info.product_id"];
          trial_at?: parameters["rowFilter.stripe_info.trial_at"];
          price_id?: parameters["rowFilter.stripe_info.price_id"];
          is_good_plan?: parameters["rowFilter.stripe_info.is_good_plan"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["stripe_info"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** stripe_info */
          stripe_info?: definitions["stripe_info"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.stripe_info.created_at"];
          updated_at?: parameters["rowFilter.stripe_info.updated_at"];
          subscription_id?: parameters["rowFilter.stripe_info.subscription_id"];
          customer_id?: parameters["rowFilter.stripe_info.customer_id"];
          status?: parameters["rowFilter.stripe_info.status"];
          product_id?: parameters["rowFilter.stripe_info.product_id"];
          trial_at?: parameters["rowFilter.stripe_info.trial_at"];
          price_id?: parameters["rowFilter.stripe_info.price_id"];
          is_good_plan?: parameters["rowFilter.stripe_info.is_good_plan"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.stripe_info.created_at"];
          updated_at?: parameters["rowFilter.stripe_info.updated_at"];
          subscription_id?: parameters["rowFilter.stripe_info.subscription_id"];
          customer_id?: parameters["rowFilter.stripe_info.customer_id"];
          status?: parameters["rowFilter.stripe_info.status"];
          product_id?: parameters["rowFilter.stripe_info.product_id"];
          trial_at?: parameters["rowFilter.stripe_info.trial_at"];
          price_id?: parameters["rowFilter.stripe_info.price_id"];
          is_good_plan?: parameters["rowFilter.stripe_info.is_good_plan"];
        };
        body: {
          /** stripe_info */
          stripe_info?: definitions["stripe_info"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/devices_onprem": {
    get: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.devices_onprem.created_at"];
          updated_at?: parameters["rowFilter.devices_onprem.updated_at"];
          platform?: parameters["rowFilter.devices_onprem.platform"];
          plugin_version?: parameters["rowFilter.devices_onprem.plugin_version"];
          version?: parameters["rowFilter.devices_onprem.version"];
          app_id?: parameters["rowFilter.devices_onprem.app_id"];
          device_id?: parameters["rowFilter.devices_onprem.device_id"];
          os_version?: parameters["rowFilter.devices_onprem.os_version"];
          id?: parameters["rowFilter.devices_onprem.id"];
          version_build?: parameters["rowFilter.devices_onprem.version_build"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["devices_onprem"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** devices_onprem */
          devices_onprem?: definitions["devices_onprem"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.devices_onprem.created_at"];
          updated_at?: parameters["rowFilter.devices_onprem.updated_at"];
          platform?: parameters["rowFilter.devices_onprem.platform"];
          plugin_version?: parameters["rowFilter.devices_onprem.plugin_version"];
          version?: parameters["rowFilter.devices_onprem.version"];
          app_id?: parameters["rowFilter.devices_onprem.app_id"];
          device_id?: parameters["rowFilter.devices_onprem.device_id"];
          os_version?: parameters["rowFilter.devices_onprem.os_version"];
          id?: parameters["rowFilter.devices_onprem.id"];
          version_build?: parameters["rowFilter.devices_onprem.version_build"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.devices_onprem.created_at"];
          updated_at?: parameters["rowFilter.devices_onprem.updated_at"];
          platform?: parameters["rowFilter.devices_onprem.platform"];
          plugin_version?: parameters["rowFilter.devices_onprem.plugin_version"];
          version?: parameters["rowFilter.devices_onprem.version"];
          app_id?: parameters["rowFilter.devices_onprem.app_id"];
          device_id?: parameters["rowFilter.devices_onprem.device_id"];
          os_version?: parameters["rowFilter.devices_onprem.os_version"];
          id?: parameters["rowFilter.devices_onprem.id"];
          version_build?: parameters["rowFilter.devices_onprem.version_build"];
        };
        body: {
          /** devices_onprem */
          devices_onprem?: definitions["devices_onprem"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/stats_onprem": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.stats_onprem.id"];
          created_at?: parameters["rowFilter.stats_onprem.created_at"];
          platform?: parameters["rowFilter.stats_onprem.platform"];
          action?: parameters["rowFilter.stats_onprem.action"];
          device_id?: parameters["rowFilter.stats_onprem.device_id"];
          version_build?: parameters["rowFilter.stats_onprem.version_build"];
          app_id?: parameters["rowFilter.stats_onprem.app_id"];
          updated_at?: parameters["rowFilter.stats_onprem.updated_at"];
          version?: parameters["rowFilter.stats_onprem.version"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["stats_onprem"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** stats_onprem */
          stats_onprem?: definitions["stats_onprem"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.stats_onprem.id"];
          created_at?: parameters["rowFilter.stats_onprem.created_at"];
          platform?: parameters["rowFilter.stats_onprem.platform"];
          action?: parameters["rowFilter.stats_onprem.action"];
          device_id?: parameters["rowFilter.stats_onprem.device_id"];
          version_build?: parameters["rowFilter.stats_onprem.version_build"];
          app_id?: parameters["rowFilter.stats_onprem.app_id"];
          updated_at?: parameters["rowFilter.stats_onprem.updated_at"];
          version?: parameters["rowFilter.stats_onprem.version"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.stats_onprem.id"];
          created_at?: parameters["rowFilter.stats_onprem.created_at"];
          platform?: parameters["rowFilter.stats_onprem.platform"];
          action?: parameters["rowFilter.stats_onprem.action"];
          device_id?: parameters["rowFilter.stats_onprem.device_id"];
          version_build?: parameters["rowFilter.stats_onprem.version_build"];
          app_id?: parameters["rowFilter.stats_onprem.app_id"];
          updated_at?: parameters["rowFilter.stats_onprem.updated_at"];
          version?: parameters["rowFilter.stats_onprem.version"];
        };
        body: {
          /** stats_onprem */
          stats_onprem?: definitions["stats_onprem"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/channel_devices": {
    get: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.channel_devices.created_at"];
          channel_id?: parameters["rowFilter.channel_devices.channel_id"];
          app_id?: parameters["rowFilter.channel_devices.app_id"];
          updated_at?: parameters["rowFilter.channel_devices.updated_at"];
          created_by?: parameters["rowFilter.channel_devices.created_by"];
          device_id?: parameters["rowFilter.channel_devices.device_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["channel_devices"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** channel_devices */
          channel_devices?: definitions["channel_devices"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.channel_devices.created_at"];
          channel_id?: parameters["rowFilter.channel_devices.channel_id"];
          app_id?: parameters["rowFilter.channel_devices.app_id"];
          updated_at?: parameters["rowFilter.channel_devices.updated_at"];
          created_by?: parameters["rowFilter.channel_devices.created_by"];
          device_id?: parameters["rowFilter.channel_devices.device_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.channel_devices.created_at"];
          channel_id?: parameters["rowFilter.channel_devices.channel_id"];
          app_id?: parameters["rowFilter.channel_devices.app_id"];
          updated_at?: parameters["rowFilter.channel_devices.updated_at"];
          created_by?: parameters["rowFilter.channel_devices.created_by"];
          device_id?: parameters["rowFilter.channel_devices.device_id"];
        };
        body: {
          /** channel_devices */
          channel_devices?: definitions["channel_devices"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/apps": {
    get: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.apps.created_at"];
          app_id?: parameters["rowFilter.apps.app_id"];
          icon_url?: parameters["rowFilter.apps.icon_url"];
          user_id?: parameters["rowFilter.apps.user_id"];
          name?: parameters["rowFilter.apps.name"];
          last_version?: parameters["rowFilter.apps.last_version"];
          updated_at?: parameters["rowFilter.apps.updated_at"];
          id?: parameters["rowFilter.apps.id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["apps"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** apps */
          apps?: definitions["apps"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.apps.created_at"];
          app_id?: parameters["rowFilter.apps.app_id"];
          icon_url?: parameters["rowFilter.apps.icon_url"];
          user_id?: parameters["rowFilter.apps.user_id"];
          name?: parameters["rowFilter.apps.name"];
          last_version?: parameters["rowFilter.apps.last_version"];
          updated_at?: parameters["rowFilter.apps.updated_at"];
          id?: parameters["rowFilter.apps.id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.apps.created_at"];
          app_id?: parameters["rowFilter.apps.app_id"];
          icon_url?: parameters["rowFilter.apps.icon_url"];
          user_id?: parameters["rowFilter.apps.user_id"];
          name?: parameters["rowFilter.apps.name"];
          last_version?: parameters["rowFilter.apps.last_version"];
          updated_at?: parameters["rowFilter.apps.updated_at"];
          id?: parameters["rowFilter.apps.id"];
        };
        body: {
          /** apps */
          apps?: definitions["apps"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/apikeys": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.apikeys.id"];
          created_at?: parameters["rowFilter.apikeys.created_at"];
          user_id?: parameters["rowFilter.apikeys.user_id"];
          key?: parameters["rowFilter.apikeys.key"];
          mode?: parameters["rowFilter.apikeys.mode"];
          updated_at?: parameters["rowFilter.apikeys.updated_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["apikeys"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** apikeys */
          apikeys?: definitions["apikeys"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.apikeys.id"];
          created_at?: parameters["rowFilter.apikeys.created_at"];
          user_id?: parameters["rowFilter.apikeys.user_id"];
          key?: parameters["rowFilter.apikeys.key"];
          mode?: parameters["rowFilter.apikeys.mode"];
          updated_at?: parameters["rowFilter.apikeys.updated_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.apikeys.id"];
          created_at?: parameters["rowFilter.apikeys.created_at"];
          user_id?: parameters["rowFilter.apikeys.user_id"];
          key?: parameters["rowFilter.apikeys.key"];
          mode?: parameters["rowFilter.apikeys.mode"];
          updated_at?: parameters["rowFilter.apikeys.updated_at"];
        };
        body: {
          /** apikeys */
          apikeys?: definitions["apikeys"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/pay_as_you_go": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.pay_as_you_go.id"];
          created_at?: parameters["rowFilter.pay_as_you_go.created_at"];
          mau?: parameters["rowFilter.pay_as_you_go.mau"];
          storage?: parameters["rowFilter.pay_as_you_go.storage"];
          bandwidth?: parameters["rowFilter.pay_as_you_go.bandwidth"];
          type?: parameters["rowFilter.pay_as_you_go.type"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["pay_as_you_go"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** pay_as_you_go */
          pay_as_you_go?: definitions["pay_as_you_go"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.pay_as_you_go.id"];
          created_at?: parameters["rowFilter.pay_as_you_go.created_at"];
          mau?: parameters["rowFilter.pay_as_you_go.mau"];
          storage?: parameters["rowFilter.pay_as_you_go.storage"];
          bandwidth?: parameters["rowFilter.pay_as_you_go.bandwidth"];
          type?: parameters["rowFilter.pay_as_you_go.type"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.pay_as_you_go.id"];
          created_at?: parameters["rowFilter.pay_as_you_go.created_at"];
          mau?: parameters["rowFilter.pay_as_you_go.mau"];
          storage?: parameters["rowFilter.pay_as_you_go.storage"];
          bandwidth?: parameters["rowFilter.pay_as_you_go.bandwidth"];
          type?: parameters["rowFilter.pay_as_you_go.type"];
        };
        body: {
          /** pay_as_you_go */
          pay_as_you_go?: definitions["pay_as_you_go"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/stats": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.stats.id"];
          created_at?: parameters["rowFilter.stats.created_at"];
          platform?: parameters["rowFilter.stats.platform"];
          action?: parameters["rowFilter.stats.action"];
          device_id?: parameters["rowFilter.stats.device_id"];
          version_build?: parameters["rowFilter.stats.version_build"];
          version?: parameters["rowFilter.stats.version"];
          app_id?: parameters["rowFilter.stats.app_id"];
          updated_at?: parameters["rowFilter.stats.updated_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["stats"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** stats */
          stats?: definitions["stats"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.stats.id"];
          created_at?: parameters["rowFilter.stats.created_at"];
          platform?: parameters["rowFilter.stats.platform"];
          action?: parameters["rowFilter.stats.action"];
          device_id?: parameters["rowFilter.stats.device_id"];
          version_build?: parameters["rowFilter.stats.version_build"];
          version?: parameters["rowFilter.stats.version"];
          app_id?: parameters["rowFilter.stats.app_id"];
          updated_at?: parameters["rowFilter.stats.updated_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.stats.id"];
          created_at?: parameters["rowFilter.stats.created_at"];
          platform?: parameters["rowFilter.stats.platform"];
          action?: parameters["rowFilter.stats.action"];
          device_id?: parameters["rowFilter.stats.device_id"];
          version_build?: parameters["rowFilter.stats.version_build"];
          version?: parameters["rowFilter.stats.version"];
          app_id?: parameters["rowFilter.stats.app_id"];
          updated_at?: parameters["rowFilter.stats.updated_at"];
        };
        body: {
          /** stats */
          stats?: definitions["stats"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/users": {
    get: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.users.created_at"];
          image_url?: parameters["rowFilter.users.image_url"];
          first_name?: parameters["rowFilter.users.first_name"];
          last_name?: parameters["rowFilter.users.last_name"];
          country?: parameters["rowFilter.users.country"];
          email?: parameters["rowFilter.users.email"];
          id?: parameters["rowFilter.users.id"];
          updated_at?: parameters["rowFilter.users.updated_at"];
          enableNotifications?: parameters["rowFilter.users.enableNotifications"];
          optForNewsletters?: parameters["rowFilter.users.optForNewsletters"];
          legalAccepted?: parameters["rowFilter.users.legalAccepted"];
          customer_id?: parameters["rowFilter.users.customer_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["users"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** users */
          users?: definitions["users"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.users.created_at"];
          image_url?: parameters["rowFilter.users.image_url"];
          first_name?: parameters["rowFilter.users.first_name"];
          last_name?: parameters["rowFilter.users.last_name"];
          country?: parameters["rowFilter.users.country"];
          email?: parameters["rowFilter.users.email"];
          id?: parameters["rowFilter.users.id"];
          updated_at?: parameters["rowFilter.users.updated_at"];
          enableNotifications?: parameters["rowFilter.users.enableNotifications"];
          optForNewsletters?: parameters["rowFilter.users.optForNewsletters"];
          legalAccepted?: parameters["rowFilter.users.legalAccepted"];
          customer_id?: parameters["rowFilter.users.customer_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.users.created_at"];
          image_url?: parameters["rowFilter.users.image_url"];
          first_name?: parameters["rowFilter.users.first_name"];
          last_name?: parameters["rowFilter.users.last_name"];
          country?: parameters["rowFilter.users.country"];
          email?: parameters["rowFilter.users.email"];
          id?: parameters["rowFilter.users.id"];
          updated_at?: parameters["rowFilter.users.updated_at"];
          enableNotifications?: parameters["rowFilter.users.enableNotifications"];
          optForNewsletters?: parameters["rowFilter.users.optForNewsletters"];
          legalAccepted?: parameters["rowFilter.users.legalAccepted"];
          customer_id?: parameters["rowFilter.users.customer_id"];
        };
        body: {
          /** users */
          users?: definitions["users"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/channel_users": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.channel_users.id"];
          created_at?: parameters["rowFilter.channel_users.created_at"];
          user_id?: parameters["rowFilter.channel_users.user_id"];
          channel_id?: parameters["rowFilter.channel_users.channel_id"];
          app_id?: parameters["rowFilter.channel_users.app_id"];
          updated_at?: parameters["rowFilter.channel_users.updated_at"];
          created_by?: parameters["rowFilter.channel_users.created_by"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["channel_users"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** channel_users */
          channel_users?: definitions["channel_users"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.channel_users.id"];
          created_at?: parameters["rowFilter.channel_users.created_at"];
          user_id?: parameters["rowFilter.channel_users.user_id"];
          channel_id?: parameters["rowFilter.channel_users.channel_id"];
          app_id?: parameters["rowFilter.channel_users.app_id"];
          updated_at?: parameters["rowFilter.channel_users.updated_at"];
          created_by?: parameters["rowFilter.channel_users.created_by"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.channel_users.id"];
          created_at?: parameters["rowFilter.channel_users.created_at"];
          user_id?: parameters["rowFilter.channel_users.user_id"];
          channel_id?: parameters["rowFilter.channel_users.channel_id"];
          app_id?: parameters["rowFilter.channel_users.app_id"];
          updated_at?: parameters["rowFilter.channel_users.updated_at"];
          created_by?: parameters["rowFilter.channel_users.created_by"];
        };
        body: {
          /** channel_users */
          channel_users?: definitions["channel_users"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/devices_override": {
    get: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.devices_override.created_at"];
          updated_at?: parameters["rowFilter.devices_override.updated_at"];
          device_id?: parameters["rowFilter.devices_override.device_id"];
          version?: parameters["rowFilter.devices_override.version"];
          app_id?: parameters["rowFilter.devices_override.app_id"];
          created_by?: parameters["rowFilter.devices_override.created_by"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["devices_override"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** devices_override */
          devices_override?: definitions["devices_override"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.devices_override.created_at"];
          updated_at?: parameters["rowFilter.devices_override.updated_at"];
          device_id?: parameters["rowFilter.devices_override.device_id"];
          version?: parameters["rowFilter.devices_override.version"];
          app_id?: parameters["rowFilter.devices_override.app_id"];
          created_by?: parameters["rowFilter.devices_override.created_by"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.devices_override.created_at"];
          updated_at?: parameters["rowFilter.devices_override.updated_at"];
          device_id?: parameters["rowFilter.devices_override.device_id"];
          version?: parameters["rowFilter.devices_override.version"];
          app_id?: parameters["rowFilter.devices_override.app_id"];
          created_by?: parameters["rowFilter.devices_override.created_by"];
        };
        body: {
          /** devices_override */
          devices_override?: definitions["devices_override"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/app_stats": {
    get: {
      parameters: {
        query: {
          app_id?: parameters["rowFilter.app_stats.app_id"];
          user_id?: parameters["rowFilter.app_stats.user_id"];
          created_at?: parameters["rowFilter.app_stats.created_at"];
          updated_at?: parameters["rowFilter.app_stats.updated_at"];
          channels?: parameters["rowFilter.app_stats.channels"];
          mlu?: parameters["rowFilter.app_stats.mlu"];
          versions?: parameters["rowFilter.app_stats.versions"];
          shared?: parameters["rowFilter.app_stats.shared"];
          mlu_real?: parameters["rowFilter.app_stats.mlu_real"];
          devices?: parameters["rowFilter.app_stats.devices"];
          date_id?: parameters["rowFilter.app_stats.date_id"];
          version_size?: parameters["rowFilter.app_stats.version_size"];
          bandwidth?: parameters["rowFilter.app_stats.bandwidth"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["app_stats"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** app_stats */
          app_stats?: definitions["app_stats"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          app_id?: parameters["rowFilter.app_stats.app_id"];
          user_id?: parameters["rowFilter.app_stats.user_id"];
          created_at?: parameters["rowFilter.app_stats.created_at"];
          updated_at?: parameters["rowFilter.app_stats.updated_at"];
          channels?: parameters["rowFilter.app_stats.channels"];
          mlu?: parameters["rowFilter.app_stats.mlu"];
          versions?: parameters["rowFilter.app_stats.versions"];
          shared?: parameters["rowFilter.app_stats.shared"];
          mlu_real?: parameters["rowFilter.app_stats.mlu_real"];
          devices?: parameters["rowFilter.app_stats.devices"];
          date_id?: parameters["rowFilter.app_stats.date_id"];
          version_size?: parameters["rowFilter.app_stats.version_size"];
          bandwidth?: parameters["rowFilter.app_stats.bandwidth"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          app_id?: parameters["rowFilter.app_stats.app_id"];
          user_id?: parameters["rowFilter.app_stats.user_id"];
          created_at?: parameters["rowFilter.app_stats.created_at"];
          updated_at?: parameters["rowFilter.app_stats.updated_at"];
          channels?: parameters["rowFilter.app_stats.channels"];
          mlu?: parameters["rowFilter.app_stats.mlu"];
          versions?: parameters["rowFilter.app_stats.versions"];
          shared?: parameters["rowFilter.app_stats.shared"];
          mlu_real?: parameters["rowFilter.app_stats.mlu_real"];
          devices?: parameters["rowFilter.app_stats.devices"];
          date_id?: parameters["rowFilter.app_stats.date_id"];
          version_size?: parameters["rowFilter.app_stats.version_size"];
          bandwidth?: parameters["rowFilter.app_stats.bandwidth"];
        };
        body: {
          /** app_stats */
          app_stats?: definitions["app_stats"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/devices": {
    get: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.devices.created_at"];
          updated_at?: parameters["rowFilter.devices.updated_at"];
          device_id?: parameters["rowFilter.devices.device_id"];
          version?: parameters["rowFilter.devices.version"];
          app_id?: parameters["rowFilter.devices.app_id"];
          platform?: parameters["rowFilter.devices.platform"];
          plugin_version?: parameters["rowFilter.devices.plugin_version"];
          os_version?: parameters["rowFilter.devices.os_version"];
          date_id?: parameters["rowFilter.devices.date_id"];
          version_build?: parameters["rowFilter.devices.version_build"];
          custom_id?: parameters["rowFilter.devices.custom_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["devices"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** devices */
          devices?: definitions["devices"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.devices.created_at"];
          updated_at?: parameters["rowFilter.devices.updated_at"];
          device_id?: parameters["rowFilter.devices.device_id"];
          version?: parameters["rowFilter.devices.version"];
          app_id?: parameters["rowFilter.devices.app_id"];
          platform?: parameters["rowFilter.devices.platform"];
          plugin_version?: parameters["rowFilter.devices.plugin_version"];
          os_version?: parameters["rowFilter.devices.os_version"];
          date_id?: parameters["rowFilter.devices.date_id"];
          version_build?: parameters["rowFilter.devices.version_build"];
          custom_id?: parameters["rowFilter.devices.custom_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.devices.created_at"];
          updated_at?: parameters["rowFilter.devices.updated_at"];
          device_id?: parameters["rowFilter.devices.device_id"];
          version?: parameters["rowFilter.devices.version"];
          app_id?: parameters["rowFilter.devices.app_id"];
          platform?: parameters["rowFilter.devices.platform"];
          plugin_version?: parameters["rowFilter.devices.plugin_version"];
          os_version?: parameters["rowFilter.devices.os_version"];
          date_id?: parameters["rowFilter.devices.date_id"];
          version_build?: parameters["rowFilter.devices.version_build"];
          custom_id?: parameters["rowFilter.devices.custom_id"];
        };
        body: {
          /** devices */
          devices?: definitions["devices"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/app_versions_meta": {
    get: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.app_versions_meta.created_at"];
          app_id?: parameters["rowFilter.app_versions_meta.app_id"];
          user_id?: parameters["rowFilter.app_versions_meta.user_id"];
          updated_at?: parameters["rowFilter.app_versions_meta.updated_at"];
          checksum?: parameters["rowFilter.app_versions_meta.checksum"];
          size?: parameters["rowFilter.app_versions_meta.size"];
          id?: parameters["rowFilter.app_versions_meta.id"];
          devices?: parameters["rowFilter.app_versions_meta.devices"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["app_versions_meta"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** app_versions_meta */
          app_versions_meta?: definitions["app_versions_meta"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.app_versions_meta.created_at"];
          app_id?: parameters["rowFilter.app_versions_meta.app_id"];
          user_id?: parameters["rowFilter.app_versions_meta.user_id"];
          updated_at?: parameters["rowFilter.app_versions_meta.updated_at"];
          checksum?: parameters["rowFilter.app_versions_meta.checksum"];
          size?: parameters["rowFilter.app_versions_meta.size"];
          id?: parameters["rowFilter.app_versions_meta.id"];
          devices?: parameters["rowFilter.app_versions_meta.devices"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.app_versions_meta.created_at"];
          app_id?: parameters["rowFilter.app_versions_meta.app_id"];
          user_id?: parameters["rowFilter.app_versions_meta.user_id"];
          updated_at?: parameters["rowFilter.app_versions_meta.updated_at"];
          checksum?: parameters["rowFilter.app_versions_meta.checksum"];
          size?: parameters["rowFilter.app_versions_meta.size"];
          id?: parameters["rowFilter.app_versions_meta.id"];
          devices?: parameters["rowFilter.app_versions_meta.devices"];
        };
        body: {
          /** app_versions_meta */
          app_versions_meta?: definitions["app_versions_meta"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/app_stats_onprem": {
    get: {
      parameters: {
        query: {
          app_id?: parameters["rowFilter.app_stats_onprem.app_id"];
          created_at?: parameters["rowFilter.app_stats_onprem.created_at"];
          updated_at?: parameters["rowFilter.app_stats_onprem.updated_at"];
          mlu?: parameters["rowFilter.app_stats_onprem.mlu"];
          versions?: parameters["rowFilter.app_stats_onprem.versions"];
          mlu_real?: parameters["rowFilter.app_stats_onprem.mlu_real"];
          date_id?: parameters["rowFilter.app_stats_onprem.date_id"];
          devices?: parameters["rowFilter.app_stats_onprem.devices"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["app_stats_onprem"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** app_stats_onprem */
          app_stats_onprem?: definitions["app_stats_onprem"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          app_id?: parameters["rowFilter.app_stats_onprem.app_id"];
          created_at?: parameters["rowFilter.app_stats_onprem.created_at"];
          updated_at?: parameters["rowFilter.app_stats_onprem.updated_at"];
          mlu?: parameters["rowFilter.app_stats_onprem.mlu"];
          versions?: parameters["rowFilter.app_stats_onprem.versions"];
          mlu_real?: parameters["rowFilter.app_stats_onprem.mlu_real"];
          date_id?: parameters["rowFilter.app_stats_onprem.date_id"];
          devices?: parameters["rowFilter.app_stats_onprem.devices"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          app_id?: parameters["rowFilter.app_stats_onprem.app_id"];
          created_at?: parameters["rowFilter.app_stats_onprem.created_at"];
          updated_at?: parameters["rowFilter.app_stats_onprem.updated_at"];
          mlu?: parameters["rowFilter.app_stats_onprem.mlu"];
          versions?: parameters["rowFilter.app_stats_onprem.versions"];
          mlu_real?: parameters["rowFilter.app_stats_onprem.mlu_real"];
          date_id?: parameters["rowFilter.app_stats_onprem.date_id"];
          devices?: parameters["rowFilter.app_stats_onprem.devices"];
        };
        body: {
          /** app_stats_onprem */
          app_stats_onprem?: definitions["app_stats_onprem"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/app_versions": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.app_versions.id"];
          created_at?: parameters["rowFilter.app_versions.created_at"];
          app_id?: parameters["rowFilter.app_versions.app_id"];
          name?: parameters["rowFilter.app_versions.name"];
          bucket_id?: parameters["rowFilter.app_versions.bucket_id"];
          user_id?: parameters["rowFilter.app_versions.user_id"];
          updated_at?: parameters["rowFilter.app_versions.updated_at"];
          deleted?: parameters["rowFilter.app_versions.deleted"];
          external_url?: parameters["rowFilter.app_versions.external_url"];
          checksum?: parameters["rowFilter.app_versions.checksum"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["app_versions"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** app_versions */
          app_versions?: definitions["app_versions"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.app_versions.id"];
          created_at?: parameters["rowFilter.app_versions.created_at"];
          app_id?: parameters["rowFilter.app_versions.app_id"];
          name?: parameters["rowFilter.app_versions.name"];
          bucket_id?: parameters["rowFilter.app_versions.bucket_id"];
          user_id?: parameters["rowFilter.app_versions.user_id"];
          updated_at?: parameters["rowFilter.app_versions.updated_at"];
          deleted?: parameters["rowFilter.app_versions.deleted"];
          external_url?: parameters["rowFilter.app_versions.external_url"];
          checksum?: parameters["rowFilter.app_versions.checksum"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.app_versions.id"];
          created_at?: parameters["rowFilter.app_versions.created_at"];
          app_id?: parameters["rowFilter.app_versions.app_id"];
          name?: parameters["rowFilter.app_versions.name"];
          bucket_id?: parameters["rowFilter.app_versions.bucket_id"];
          user_id?: parameters["rowFilter.app_versions.user_id"];
          updated_at?: parameters["rowFilter.app_versions.updated_at"];
          deleted?: parameters["rowFilter.app_versions.deleted"];
          external_url?: parameters["rowFilter.app_versions.external_url"];
          checksum?: parameters["rowFilter.app_versions.checksum"];
        };
        body: {
          /** app_versions */
          app_versions?: definitions["app_versions"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/rpc/increment_stats": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: character varying */
            app_id: string;
            /** Format: integer */
            bandwidth: number;
            /** Format: integer */
            channels: number;
            /** Format: character varying */
            date_id: string;
            /** Format: integer */
            devices: number;
            /** Format: integer */
            mlu: number;
            /** Format: integer */
            mlu_real: number;
            /** Format: integer */
            shared: number;
            /** Format: integer */
            version_size: number;
            /** Format: integer */
            versions: number;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/is_app_owner": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: character varying */
            appid: string;
            /** Format: uuid */
            userid: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/is_in_channel": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: uuid */
            ownerid: string;
            /** Format: uuid */
            userid: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/is_not_deleted": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: character varying */
            email_check: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/get_max_channel": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: uuid */
            userid: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/get_stats": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: character varying */
            dateid: string;
            /** Format: uuid */
            userid: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/get_current_plan_name": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: uuid */
            userid: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/is_canceled": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: uuid */
            userid: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/get_dl_by_month_by_app": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: character varying */
            appid: string;
            /** Format: integer */
            pastmonth: number;
            /** Format: uuid */
            userid: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/find_best_plan": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: bigint */
            apps_n: number;
            /** Format: bigint */
            channels_n: number;
            /** Format: bigint */
            shared_n: number;
            /** Format: bigint */
            updates_n: number;
            /** Format: bigint */
            versions_n: number;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/exist_channel": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: text */
            apikey: string;
            /** Format: character varying */
            appid: string;
            /** Format: character varying */
            name_channel: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/get_total_stats": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: character varying */
            dateid: string;
            /** Format: uuid */
            userid: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/increment_version_stats": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: character varying */
            app_id: string;
            /** Format: integer */
            devices: number;
            /** Format: bigint */
            version_id: number;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/find_fit_plan": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: bigint */
            apps_n: number;
            /** Format: bigint */
            channels_n: number;
            /** Format: bigint */
            shared_n: number;
            /** Format: bigint */
            updates_n: number;
            /** Format: bigint */
            versions_n: number;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/exist_app_versions": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: text */
            apikey: string;
            /** Format: character varying */
            appid: string;
            /** Format: character varying */
            name_version: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/is_good_plan_v2": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: uuid */
            userid: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/get_user_id": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: text */
            apikey: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/is_trial": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: uuid */
            userid: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/is_admin": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: uuid */
            userid: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/exist_app": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: text */
            apikey: string;
            /** Format: character varying */
            appid: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/is_paying": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: uuid */
            userid: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/find_best_plan_v2": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: bigint */
            bandwidth: number;
            /** Format: bigint */
            mau: number;
            /** Format: bigint */
            storage: number;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/is_app_shared": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: character varying */
            appid: string;
            /** Format: uuid */
            userid: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/get_max_shared": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: uuid */
            userid: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/get_max_version": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: uuid */
            userid: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/find_fit_plan_v2": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: bigint */
            bandwidth: number;
            /** Format: bigint */
            mau: number;
            /** Format: bigint */
            storage: number;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/is_version_shared": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: uuid */
            userid: string;
            /** Format: bigint */
            versionid: number;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/get_max_stats": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: character varying */
            dateid: string;
            /** Format: uuid */
            userid: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/count_all_apps": {
    post: {
      parameters: {
        body: {
          args: { [key: string]: unknown };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/exist_user": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: character varying */
            e_mail: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/is_allowed_capgkey": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: text */
            apikey: string;
            /** Format: character varying */
            app_id: string;
            /** Format: public.key_mode[] */
            keymode: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/is_good_plan": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: uuid */
            userid: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/count_all_updates": {
    post: {
      parameters: {
        body: {
          args: { [key: string]: unknown };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/is_allowed_action": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: text */
            apikey: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/get_dl_by_month": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: integer */
            pastmonth: number;
            /** Format: uuid */
            userid: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
}

export interface definitions {
  channels: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at: string;
    /** Format: character varying */
    name: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Foreign Key to `apps.app_id`.<fk table='apps' column='app_id'/>
     */
    app_id: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `app_versions.id`.<fk table='app_versions' column='id'/>
     */
    version: number;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    created_by: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at: string;
    /**
     * Format: boolean
     * @default false
     */
    public: boolean;
    /**
     * Format: boolean
     * @default true
     */
    disableAutoUpdateUnderNative: boolean;
    /**
     * Format: boolean
     * @default true
     */
    disableAutoUpdateToMajor: boolean;
    /**
     * Format: boolean
     * @default false
     */
    beta: boolean;
    /**
     * Format: boolean
     * @default true
     */
    ios: boolean;
    /**
     * Format: boolean
     * @default true
     */
    android: boolean;
    /**
     * Format: boolean
     * @default false
     */
    allow_device_self_set: boolean;
  };
  deleted_account: {
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    email: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
  };
  global_stats: {
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    date_id: string;
    /** Format: bigint */
    apps: number;
    /** Format: bigint */
    updates: number;
    /** Format: bigint */
    stars: number;
    /** Format: bigint */
    users?: number;
    /** Format: bigint */
    paying?: number;
    /** Format: bigint */
    trial?: number;
    /** Format: bigint */
    need_upgrade?: number;
    /** Format: bigint */
    not_paying?: number;
  };
  plans: {
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default
     */
    name: string;
    /**
     * Format: character varying
     * @default
     */
    description: string;
    /** Format: bigint */
    price_m: number;
    /** Format: bigint */
    price_y: number;
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default
     */
    stripe_id: string;
    /** Format: bigint */
    app: number;
    /** Format: bigint */
    channel: number;
    /** Format: bigint */
    update: number;
    /** Format: bigint */
    version: number;
    /** Format: bigint */
    shared: number;
    /**
     * Format: boolean
     * @default false
     */
    abtest: boolean;
    /**
     * Format: boolean
     * @default false
     */
    progressive_deploy: boolean;
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /** Format: character varying */
    price_m_id: string;
    /** Format: character varying */
    price_y_id: string;
    /** Format: double precision */
    storage: number;
    /** Format: double precision */
    bandwidth: number;
    /** Format: bigint */
    mau: number;
    /**
     * Format: character varying
     * @default
     */
    market_desc?: string;
    /** Format: double precision */
    storage_unit?: number;
    /** Format: double precision */
    bandwidth_unit?: number;
    /** Format: double precision */
    mau_unit?: number;
  };
  stripe_info: {
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at: string;
    /** Format: character varying */
    subscription_id?: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    customer_id: string;
    /**
     * Format: public.stripe_status
     * @enum {string}
     */
    status?:
    | "created"
    | "succeeded"
    | "updated"
    | "failed"
    | "deleted"
    | "canceled";
    /**
     * Format: character varying
     * @description Note:
     * This is a Foreign Key to `plans.stripe_id`.<fk table='plans' column='stripe_id'/>
     * @default free
     */
    product_id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    trial_at: string;
    /** Format: character varying */
    price_id?: string;
    /**
     * Format: boolean
     * @default true
     */
    is_good_plan?: boolean;
  };
  devices_onprem: {
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /**
     * Format: public.platform_os
     * @enum {string}
     */
    platform?: "ios" | "android";
    /**
     * Format: text
     * @default 2.3.3
     */
    plugin_version: string;
    /** Format: character varying */
    version?: string;
    /** Format: character varying */
    app_id?: string;
    /** Format: character varying */
    device_id?: string;
    /** Format: character varying */
    os_version?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: text
     * @default builtin
     */
    version_build?: string;
  };
  stats_onprem: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: public.platform_os
     * @enum {string}
     */
    platform: "ios" | "android";
    /** Format: text */
    action: string;
    /** Format: character varying */
    device_id: string;
    /** Format: text */
    version_build: string;
    /** Format: character varying */
    app_id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /** Format: character varying */
    version: string;
  };
  channel_devices: {
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `channels.id`.<fk table='channels' column='id'/>
     */
    channel_id: number;
    /**
     * Format: character varying
     * @description Note:
     * This is a Foreign Key to `apps.app_id`.<fk table='apps' column='app_id'/>
     */
    app_id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    created_by: string;
    /**
     * Format: text
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `devices.device_id`.<fk table='devices' column='device_id'/>
     */
    device_id: string;
  };
  apps: {
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    app_id: string;
    /** Format: character varying */
    icon_url: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    user_id: string;
    /** Format: character varying */
    name?: string;
    /** Format: character varying */
    last_version?: string;
    /** Format: timestamp with time zone */
    updated_at?: string;
    /**
     * Format: uuid
     * @default extensions.uuid_generate_v4()
     */
    id?: string;
  };
  apikeys: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    user_id: string;
    /** Format: character varying */
    key: string;
    /**
     * Format: public.key_mode
     * @enum {string}
     */
    mode: "read" | "write" | "all" | "upload";
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
  };
  /** @description price for pay as you go */
  pay_as_you_go: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: double precision */
    mau: number;
    /** Format: double precision */
    storage: number;
    /** Format: double precision */
    bandwidth: number;
    /**
     * Format: public.pay_as_you_go_type
     * @enum {string}
     */
    type: "base" | "units";
  };
  stats: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: public.platform_os
     * @enum {string}
     */
    platform: "ios" | "android";
    /** Format: text */
    action: string;
    /**
     * Format: text
     * @description Note:
     * This is a Foreign Key to `devices.device_id`.<fk table='devices' column='device_id'/>
     */
    device_id: string;
    /** Format: text */
    version_build: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `app_versions.id`.<fk table='app_versions' column='id'/>
     */
    version: number;
    /**
     * Format: character varying
     * @description Note:
     * This is a Foreign Key to `apps.app_id`.<fk table='apps' column='app_id'/>
     */
    app_id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
  };
  users: {
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    image_url?: string;
    /** Format: character varying */
    first_name?: string;
    /** Format: character varying */
    last_name?: string;
    /** Format: character varying */
    country?: string;
    /** Format: character varying */
    email: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /**
     * Format: boolean
     * @default false
     */
    enableNotifications: boolean;
    /**
     * Format: boolean
     * @default false
     */
    optForNewsletters: boolean;
    /**
     * Format: boolean
     * @default false
     */
    legalAccepted: boolean;
    /**
     * Format: character varying
     * @description Note:
     * This is a Foreign Key to `stripe_info.customer_id`.<fk table='stripe_info' column='customer_id'/>
     */
    customer_id?: string;
  };
  channel_users: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    user_id: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `channels.id`.<fk table='channels' column='id'/>
     */
    channel_id: number;
    /**
     * Format: character varying
     * @description Note:
     * This is a Foreign Key to `apps.app_id`.<fk table='apps' column='app_id'/>
     */
    app_id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    created_by?: string;
  };
  devices_override: {
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /**
     * Format: text
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `devices.device_id`.<fk table='devices' column='device_id'/>
     */
    device_id: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `app_versions.id`.<fk table='app_versions' column='id'/>
     */
    version: number;
    /**
     * Format: character varying
     * @description Note:
     * This is a Foreign Key to `apps.app_id`.<fk table='apps' column='app_id'/>
     */
    app_id: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    created_by?: string;
  };
  app_stats: {
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `apps.app_id`.<fk table='apps' column='app_id'/>
     */
    app_id: string;
    /** Format: uuid */
    user_id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /** Format: smallint */
    channels: number;
    /** Format: bigint */
    mlu: number;
    /** Format: bigint */
    versions: number;
    /** Format: bigint */
    shared: number;
    /** Format: bigint */
    mlu_real: number;
    /** Format: bigint */
    devices: number;
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default 2022-05
     */
    date_id: string;
    /** Format: bigint */
    version_size?: number;
    /** Format: bigint */
    bandwidth?: number;
  };
  devices: {
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /**
     * Format: text
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    device_id: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `app_versions.id`.<fk table='app_versions' column='id'/>
     */
    version: number;
    /**
     * Format: character varying
     * @description Note:
     * This is a Foreign Key to `apps.app_id`.<fk table='apps' column='app_id'/>
     */
    app_id: string;
    /**
     * Format: public.platform_os
     * @enum {string}
     */
    platform?: "ios" | "android";
    /**
     * Format: text
     * @default 2.3.3
     */
    plugin_version: string;
    /** Format: character varying */
    os_version?: string;
    /** Format: character varying */
    date_id?: string;
    /**
     * Format: text
     * @default builtin
     */
    version_build?: string;
    /**
     * Format: text
     * @default ::text
     */
    custom_id: string;
  };
  app_versions_meta: {
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Foreign Key to `apps.app_id`.<fk table='apps' column='app_id'/>
     */
    app_id: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    user_id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /** Format: character varying */
    checksum: string;
    /** Format: bigint */
    size: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `app_versions.id`.<fk table='app_versions' column='id'/>
     */
    id: number;
    /** Format: bigint */
    devices?: number;
  };
  app_stats_onprem: {
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    app_id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /** Format: bigint */
    mlu?: number;
    /** Format: bigint */
    versions?: number;
    /** Format: bigint */
    mlu_real?: number;
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    date_id: string;
    /** Format: bigint */
    devices?: number;
  };
  app_versions: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Foreign Key to `apps.app_id`.<fk table='apps' column='app_id'/>
     */
    app_id: string;
    /** Format: character varying */
    name: string;
    /** Format: character varying */
    bucket_id?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    user_id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /**
     * Format: boolean
     * @default false
     */
    deleted: boolean;
    /** Format: character varying */
    external_url?: string;
    /** Format: character varying */
    checksum?: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description channels */
  "body.channels": definitions["channels"];
  /** Format: bigint */
  "rowFilter.channels.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.channels.created_at": string;
  /** Format: character varying */
  "rowFilter.channels.name": string;
  /** Format: character varying */
  "rowFilter.channels.app_id": string;
  /** Format: bigint */
  "rowFilter.channels.version": string;
  /** Format: uuid */
  "rowFilter.channels.created_by": string;
  /** Format: timestamp with time zone */
  "rowFilter.channels.updated_at": string;
  /** Format: boolean */
  "rowFilter.channels.public": string;
  /** Format: boolean */
  "rowFilter.channels.disableAutoUpdateUnderNative": string;
  /** Format: boolean */
  "rowFilter.channels.disableAutoUpdateToMajor": string;
  /** Format: boolean */
  "rowFilter.channels.beta": string;
  /** Format: boolean */
  "rowFilter.channels.ios": string;
  /** Format: boolean */
  "rowFilter.channels.android": string;
  /** Format: boolean */
  "rowFilter.channels.allow_device_self_set": string;
  /** @description deleted_account */
  "body.deleted_account": definitions["deleted_account"];
  /** Format: timestamp with time zone */
  "rowFilter.deleted_account.created_at": string;
  /** Format: character varying */
  "rowFilter.deleted_account.email": string;
  /** Format: uuid */
  "rowFilter.deleted_account.id": string;
  /** @description global_stats */
  "body.global_stats": definitions["global_stats"];
  /** Format: timestamp with time zone */
  "rowFilter.global_stats.created_at": string;
  /** Format: character varying */
  "rowFilter.global_stats.date_id": string;
  /** Format: bigint */
  "rowFilter.global_stats.apps": string;
  /** Format: bigint */
  "rowFilter.global_stats.updates": string;
  /** Format: bigint */
  "rowFilter.global_stats.stars": string;
  /** Format: bigint */
  "rowFilter.global_stats.users": string;
  /** Format: bigint */
  "rowFilter.global_stats.paying": string;
  /** Format: bigint */
  "rowFilter.global_stats.trial": string;
  /** Format: bigint */
  "rowFilter.global_stats.need_upgrade": string;
  /** Format: bigint */
  "rowFilter.global_stats.not_paying": string;
  /** @description plans */
  "body.plans": definitions["plans"];
  /** Format: timestamp with time zone */
  "rowFilter.plans.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.plans.updated_at": string;
  /** Format: character varying */
  "rowFilter.plans.name": string;
  /** Format: character varying */
  "rowFilter.plans.description": string;
  /** Format: bigint */
  "rowFilter.plans.price_m": string;
  /** Format: bigint */
  "rowFilter.plans.price_y": string;
  /** Format: character varying */
  "rowFilter.plans.stripe_id": string;
  /** Format: bigint */
  "rowFilter.plans.app": string;
  /** Format: bigint */
  "rowFilter.plans.channel": string;
  /** Format: bigint */
  "rowFilter.plans.update": string;
  /** Format: bigint */
  "rowFilter.plans.version": string;
  /** Format: bigint */
  "rowFilter.plans.shared": string;
  /** Format: boolean */
  "rowFilter.plans.abtest": string;
  /** Format: boolean */
  "rowFilter.plans.progressive_deploy": string;
  /** Format: uuid */
  "rowFilter.plans.id": string;
  /** Format: character varying */
  "rowFilter.plans.price_m_id": string;
  /** Format: character varying */
  "rowFilter.plans.price_y_id": string;
  /** Format: double precision */
  "rowFilter.plans.storage": string;
  /** Format: double precision */
  "rowFilter.plans.bandwidth": string;
  /** Format: bigint */
  "rowFilter.plans.mau": string;
  /** Format: character varying */
  "rowFilter.plans.market_desc": string;
  /** Format: double precision */
  "rowFilter.plans.storage_unit": string;
  /** Format: double precision */
  "rowFilter.plans.bandwidth_unit": string;
  /** Format: double precision */
  "rowFilter.plans.mau_unit": string;
  /** @description stripe_info */
  "body.stripe_info": definitions["stripe_info"];
  /** Format: timestamp with time zone */
  "rowFilter.stripe_info.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.stripe_info.updated_at": string;
  /** Format: character varying */
  "rowFilter.stripe_info.subscription_id": string;
  /** Format: character varying */
  "rowFilter.stripe_info.customer_id": string;
  /** Format: public.stripe_status */
  "rowFilter.stripe_info.status": string;
  /** Format: character varying */
  "rowFilter.stripe_info.product_id": string;
  /** Format: timestamp with time zone */
  "rowFilter.stripe_info.trial_at": string;
  /** Format: character varying */
  "rowFilter.stripe_info.price_id": string;
  /** Format: boolean */
  "rowFilter.stripe_info.is_good_plan": string;
  /** @description devices_onprem */
  "body.devices_onprem": definitions["devices_onprem"];
  /** Format: timestamp with time zone */
  "rowFilter.devices_onprem.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.devices_onprem.updated_at": string;
  /** Format: public.platform_os */
  "rowFilter.devices_onprem.platform": string;
  /** Format: text */
  "rowFilter.devices_onprem.plugin_version": string;
  /** Format: character varying */
  "rowFilter.devices_onprem.version": string;
  /** Format: character varying */
  "rowFilter.devices_onprem.app_id": string;
  /** Format: character varying */
  "rowFilter.devices_onprem.device_id": string;
  /** Format: character varying */
  "rowFilter.devices_onprem.os_version": string;
  /** Format: uuid */
  "rowFilter.devices_onprem.id": string;
  /** Format: text */
  "rowFilter.devices_onprem.version_build": string;
  /** @description stats_onprem */
  "body.stats_onprem": definitions["stats_onprem"];
  /** Format: bigint */
  "rowFilter.stats_onprem.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.stats_onprem.created_at": string;
  /** Format: public.platform_os */
  "rowFilter.stats_onprem.platform": string;
  /** Format: text */
  "rowFilter.stats_onprem.action": string;
  /** Format: character varying */
  "rowFilter.stats_onprem.device_id": string;
  /** Format: text */
  "rowFilter.stats_onprem.version_build": string;
  /** Format: character varying */
  "rowFilter.stats_onprem.app_id": string;
  /** Format: timestamp with time zone */
  "rowFilter.stats_onprem.updated_at": string;
  /** Format: character varying */
  "rowFilter.stats_onprem.version": string;
  /** @description channel_devices */
  "body.channel_devices": definitions["channel_devices"];
  /** Format: timestamp with time zone */
  "rowFilter.channel_devices.created_at": string;
  /** Format: bigint */
  "rowFilter.channel_devices.channel_id": string;
  /** Format: character varying */
  "rowFilter.channel_devices.app_id": string;
  /** Format: timestamp with time zone */
  "rowFilter.channel_devices.updated_at": string;
  /** Format: uuid */
  "rowFilter.channel_devices.created_by": string;
  /** Format: text */
  "rowFilter.channel_devices.device_id": string;
  /** @description apps */
  "body.apps": definitions["apps"];
  /** Format: timestamp with time zone */
  "rowFilter.apps.created_at": string;
  /** Format: character varying */
  "rowFilter.apps.app_id": string;
  /** Format: character varying */
  "rowFilter.apps.icon_url": string;
  /** Format: uuid */
  "rowFilter.apps.user_id": string;
  /** Format: character varying */
  "rowFilter.apps.name": string;
  /** Format: character varying */
  "rowFilter.apps.last_version": string;
  /** Format: timestamp with time zone */
  "rowFilter.apps.updated_at": string;
  /** Format: uuid */
  "rowFilter.apps.id": string;
  /** @description apikeys */
  "body.apikeys": definitions["apikeys"];
  /** Format: bigint */
  "rowFilter.apikeys.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.apikeys.created_at": string;
  /** Format: uuid */
  "rowFilter.apikeys.user_id": string;
  /** Format: character varying */
  "rowFilter.apikeys.key": string;
  /** Format: public.key_mode */
  "rowFilter.apikeys.mode": string;
  /** Format: timestamp with time zone */
  "rowFilter.apikeys.updated_at": string;
  /** @description pay_as_you_go */
  "body.pay_as_you_go": definitions["pay_as_you_go"];
  /** Format: bigint */
  "rowFilter.pay_as_you_go.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.pay_as_you_go.created_at": string;
  /** Format: double precision */
  "rowFilter.pay_as_you_go.mau": string;
  /** Format: double precision */
  "rowFilter.pay_as_you_go.storage": string;
  /** Format: double precision */
  "rowFilter.pay_as_you_go.bandwidth": string;
  /** Format: public.pay_as_you_go_type */
  "rowFilter.pay_as_you_go.type": string;
  /** @description stats */
  "body.stats": definitions["stats"];
  /** Format: bigint */
  "rowFilter.stats.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.stats.created_at": string;
  /** Format: public.platform_os */
  "rowFilter.stats.platform": string;
  /** Format: text */
  "rowFilter.stats.action": string;
  /** Format: text */
  "rowFilter.stats.device_id": string;
  /** Format: text */
  "rowFilter.stats.version_build": string;
  /** Format: bigint */
  "rowFilter.stats.version": string;
  /** Format: character varying */
  "rowFilter.stats.app_id": string;
  /** Format: timestamp with time zone */
  "rowFilter.stats.updated_at": string;
  /** @description users */
  "body.users": definitions["users"];
  /** Format: timestamp with time zone */
  "rowFilter.users.created_at": string;
  /** Format: character varying */
  "rowFilter.users.image_url": string;
  /** Format: character varying */
  "rowFilter.users.first_name": string;
  /** Format: character varying */
  "rowFilter.users.last_name": string;
  /** Format: character varying */
  "rowFilter.users.country": string;
  /** Format: character varying */
  "rowFilter.users.email": string;
  /** Format: uuid */
  "rowFilter.users.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.users.updated_at": string;
  /** Format: boolean */
  "rowFilter.users.enableNotifications": string;
  /** Format: boolean */
  "rowFilter.users.optForNewsletters": string;
  /** Format: boolean */
  "rowFilter.users.legalAccepted": string;
  /** Format: character varying */
  "rowFilter.users.customer_id": string;
  /** @description channel_users */
  "body.channel_users": definitions["channel_users"];
  /** Format: bigint */
  "rowFilter.channel_users.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.channel_users.created_at": string;
  /** Format: uuid */
  "rowFilter.channel_users.user_id": string;
  /** Format: bigint */
  "rowFilter.channel_users.channel_id": string;
  /** Format: character varying */
  "rowFilter.channel_users.app_id": string;
  /** Format: timestamp with time zone */
  "rowFilter.channel_users.updated_at": string;
  /** Format: uuid */
  "rowFilter.channel_users.created_by": string;
  /** @description devices_override */
  "body.devices_override": definitions["devices_override"];
  /** Format: timestamp with time zone */
  "rowFilter.devices_override.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.devices_override.updated_at": string;
  /** Format: text */
  "rowFilter.devices_override.device_id": string;
  /** Format: bigint */
  "rowFilter.devices_override.version": string;
  /** Format: character varying */
  "rowFilter.devices_override.app_id": string;
  /** Format: uuid */
  "rowFilter.devices_override.created_by": string;
  /** @description app_stats */
  "body.app_stats": definitions["app_stats"];
  /** Format: character varying */
  "rowFilter.app_stats.app_id": string;
  /** Format: uuid */
  "rowFilter.app_stats.user_id": string;
  /** Format: timestamp with time zone */
  "rowFilter.app_stats.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.app_stats.updated_at": string;
  /** Format: smallint */
  "rowFilter.app_stats.channels": string;
  /** Format: bigint */
  "rowFilter.app_stats.mlu": string;
  /** Format: bigint */
  "rowFilter.app_stats.versions": string;
  /** Format: bigint */
  "rowFilter.app_stats.shared": string;
  /** Format: bigint */
  "rowFilter.app_stats.mlu_real": string;
  /** Format: bigint */
  "rowFilter.app_stats.devices": string;
  /** Format: character varying */
  "rowFilter.app_stats.date_id": string;
  /** Format: bigint */
  "rowFilter.app_stats.version_size": string;
  /** Format: bigint */
  "rowFilter.app_stats.bandwidth": string;
  /** @description devices */
  "body.devices": definitions["devices"];
  /** Format: timestamp with time zone */
  "rowFilter.devices.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.devices.updated_at": string;
  /** Format: text */
  "rowFilter.devices.device_id": string;
  /** Format: bigint */
  "rowFilter.devices.version": string;
  /** Format: character varying */
  "rowFilter.devices.app_id": string;
  /** Format: public.platform_os */
  "rowFilter.devices.platform": string;
  /** Format: text */
  "rowFilter.devices.plugin_version": string;
  /** Format: character varying */
  "rowFilter.devices.os_version": string;
  /** Format: character varying */
  "rowFilter.devices.date_id": string;
  /** Format: text */
  "rowFilter.devices.version_build": string;
  /** Format: text */
  "rowFilter.devices.custom_id": string;
  /** @description app_versions_meta */
  "body.app_versions_meta": definitions["app_versions_meta"];
  /** Format: timestamp with time zone */
  "rowFilter.app_versions_meta.created_at": string;
  /** Format: character varying */
  "rowFilter.app_versions_meta.app_id": string;
  /** Format: uuid */
  "rowFilter.app_versions_meta.user_id": string;
  /** Format: timestamp with time zone */
  "rowFilter.app_versions_meta.updated_at": string;
  /** Format: character varying */
  "rowFilter.app_versions_meta.checksum": string;
  /** Format: bigint */
  "rowFilter.app_versions_meta.size": string;
  /** Format: bigint */
  "rowFilter.app_versions_meta.id": string;
  /** Format: bigint */
  "rowFilter.app_versions_meta.devices": string;
  /** @description app_stats_onprem */
  "body.app_stats_onprem": definitions["app_stats_onprem"];
  /** Format: character varying */
  "rowFilter.app_stats_onprem.app_id": string;
  /** Format: timestamp with time zone */
  "rowFilter.app_stats_onprem.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.app_stats_onprem.updated_at": string;
  /** Format: bigint */
  "rowFilter.app_stats_onprem.mlu": string;
  /** Format: bigint */
  "rowFilter.app_stats_onprem.versions": string;
  /** Format: bigint */
  "rowFilter.app_stats_onprem.mlu_real": string;
  /** Format: character varying */
  "rowFilter.app_stats_onprem.date_id": string;
  /** Format: bigint */
  "rowFilter.app_stats_onprem.devices": string;
  /** @description app_versions */
  "body.app_versions": definitions["app_versions"];
  /** Format: bigint */
  "rowFilter.app_versions.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.app_versions.created_at": string;
  /** Format: character varying */
  "rowFilter.app_versions.app_id": string;
  /** Format: character varying */
  "rowFilter.app_versions.name": string;
  /** Format: character varying */
  "rowFilter.app_versions.bucket_id": string;
  /** Format: uuid */
  "rowFilter.app_versions.user_id": string;
  /** Format: timestamp with time zone */
  "rowFilter.app_versions.updated_at": string;
  /** Format: boolean */
  "rowFilter.app_versions.deleted": string;
  /** Format: character varying */
  "rowFilter.app_versions.external_url": string;
  /** Format: character varying */
  "rowFilter.app_versions.checksum": string;
}

export interface operations { }

export interface external { }
